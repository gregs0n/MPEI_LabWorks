#include <cstdio>

/*
 * Написать функцию, указанную в задании, используя только операции над битам
 * и (никаких возведений в степень и т.п.). Во всех вариантах необходимо
 * менять все биты сразу, а не по одному в цикле. Биты нумеруются с 0 до 31
 * начиная с правого бита. Бит с номером p должен меняться.
 * 
 * Написать программу для проверки правильности работы функции.
 * Для того, чтобы было удобно проверять правильность работы с битами,
 * исходное и полученное число можно вывести, используя формат
 * %08x – целое число в шестнадцатеричной системе счисления, 8 знаков,
 * впереди добавляются нули. Необходимо проверять корректность
 * введённых значений переменных n и p.
 *
 * Написать функцию, которая в числе x устанавливает 0 в n бит,
 * находящиеся слева от позиции p, остальные биты остаются без изменения.
*/

void bitMaker(int& num, int n, int p);

int main(int argc, char *argv[]) {
    
    int num = 0, n = 0, p = 0;

    printf("Enter the number:");
    scanf("%d", &num);

    printf("\nEnter the n and p numbers: ");
    scanf("%d %d", &n, &p);

    printf("Before changes: %08x\n", num);
    bitMaker(num, n, p);
    printf("After changes: %08x\n", num);

    return 0;
}

void bitMaker(int& num, int n, int p) {
    num = num & (1 << (n + p) + (1 << (p + 1)) - 1);
}
