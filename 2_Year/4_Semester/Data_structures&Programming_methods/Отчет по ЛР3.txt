Отчет по лабораторной работе №3
Выполнил: Волков Павел Евгеньевич, А-14-19

11. Сформировать список простых множителей заданного числа

Код программы:
(defun get_primes (num k) (
    (cond ((null num) ())
          ((equal num 1) (1))
          ((> (* 2 k) num) (list num))
          ((= (mod num k) 0) (cons k (get_primes (/ num k) 2)))
          (T (get_primes num (+ k 1))))))

Примеры работы: (get_primes 40 2) -> (2 2 2 5)
		(get_primes 120 2) -> (2 3 4 5)

---------------------------------------------------------------------
12. Реверсировать элементы списка произвольной струкуры
на всех уровнях

Код программы:
(defun reverse (lst) (
    (cond ((null lst) ())
          ((atom lst) (list lst))
          ((and (atom (car lst)) (null (cdr lst))) (list (car lst)))
          ((null (cdr lst)) (list (reverse (car lst))))
          ((atom (car lst)) (append (reverse (cdr lst)) (list (car lst))))
          (T (append (reverse (cdr lst)) (list (reverse (car lst))))))))

Примеры работы: (reverse '(a (b c) d (e (f g)))) -> (((g f) e) d (c b) a)

---------------------------------------------------------------------
13. Линеаризовать список произвольной структуры

Код программы:
(defun linearise (lst) (
    (cond ((null lst) nil)
          ((listp (car lst)) (append (linearise (car lst)) (linearise (cdr lst))))
          (T (cons (car lst) (linearise (cdr lst)))))))
Примеры работы: (linearise '(a (b c) d)) -> (a b c d)

---------------------------------------------------------------------
14. Сформировать список, являющийся пересечением 2-х заданных списков

Код программы:
(defun intersect (lhs rhs res) (
    (cond ((null lhs) nil)
          ((null rhs) res)
          ((and (member (car rhs) lhs) (not (member (car rhs) res))) (intersect lhs (cdr rhs) (cons (car rhs) res)))
          (T (intersect lhs (cdr rhs) res)))))
Примеры работы: (intersect '(1 2 3 4 4) '(5 3 1 2)) -> (2 1 3)

---------------------------------------------------------------------
15. Сформировать список чисел Фибоначчи от первого числа до числа
с заданным номером включительно.

Код программы:
(defun fib_seq (one two n res) (
    (cond ((eq n 2) res)
          (T (fib_seq two (+ two one) (- n 1) (append res (list (+ two one))))))))

Примеры работы: (fib_seq 1 1 5 '(1 1)) -> (1 1 2 3 5)